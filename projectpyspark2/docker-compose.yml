version: "3"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - pipeline-net

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # Single listener to satisfy validation
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - pipeline-net

  minio:
    image: minio/minio:RELEASE.2025-06-13T11-33-47Z
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio-data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - pipeline-net

  spark-master:
    image: bitnami/spark:3.5.0
    environment:
      - SPARK_MODE=master
    ports:
      - "7077:7077"
      - "8080:8080"
    networks:
      - pipeline-net
    volumes:
      - ./jobs:/opt/bitnami/spark/jobs:ro

  spark-worker:
    image: bitnami/spark:3.5.0
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
    ports:
      - "8081:8081"
    networks:
      - pipeline-net

  jupyter:
    image: jupyter/pyspark-notebook:spark-3.5.0
    depends_on:
      - spark-master
      - kafka
      - minio
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - AWS_ENDPOINT_URL=http://minio:9000
      - SPARK_MASTER=spark://spark-master:7077
    ports:
      - "8888:8888"
    networks:
      - pipeline-net

  binance-producer:
    image: python:3.11-slim
    depends_on: [kafka]
    environment:
      - KAFKA_BOOTSTRAP=kafka:9092
    volumes:
      - ./binance_producer.py:/app/binance_producer.py:ro
    command: >-
      bash -c "pip install --no-cache-dir requests confluent-kafka &&
              python /app/binance_producer.py"
    networks: [pipeline-net]
    
networks:
  pipeline-net:
    driver: bridge

volumes:
  minio-data:
